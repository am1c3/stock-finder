{"version":3,"sources":["assets/icons/search.svg","assets/icons/clear.svg","assets/icons/time.svg","assets/icons/location.svg","assets/icons/error.svg","assets/images/big_cube.svg","assets/images/logo.svg","modules/stocks/StocksReducer.ts","store/store.ts","modules/stocks/types/ActionTypes.ts","constants/colors.ts","components/SearchBar.tsx","constants/fonts.ts","components/LightBox.jsx","modules/stocks/SingleSearchResult.tsx","components/Loader.tsx","modules/stocks/StockSearchResults.tsx","router/routes.ts","api/apiRoutes.js","api/keys.ts","modules/stocks/pages/StockSearchPage.tsx","modules/stocks/StocksActions.ts","components/Select.tsx","components/buttons/PrimaryButton.tsx","components/ErrorDialog.tsx","modules/stocks/pages/SingleStockPage.tsx","modules/stocks/StocksRouter.tsx","modules/home/HomePage.tsx","constants/fontSizes.ts","components/NavBarItem.tsx","components/NavBar.tsx","components/Logo.tsx","components/Header.tsx","components/Footer.tsx","components/PageWrapper.tsx","router/MainRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","searchLoading","stockInfoLoading","stockInfoError","searchError","stocks","stockInfo","meta","info","symbol","lastRefreshed","outputSize","timezone","values","reducers","combineReducers","state","action","type","payload","store","createStore","applyMiddleware","thunk","InputWrapper","styled","div","Input","input","colors","SearchIcon","img","withClear","SearchBar","props","onChange","value","placeholder","onClear","e","target","src","clear","search","onClick","Wrapper","Title","fonts","LightBox","children","title","Link","LeftSide","Symbol","Name","RightSide","SingleSearchResult","item","path","to","name","location","style","height","currency","color","size","Loader","className","NoResults","StockSearchResults","results","loading","length","map","index","key","ALPHA_VENTAGE_API_URL","mapDispatch","searchStocksBySymbol","keywords","dispatch","a","axios","method","url","result","bestMatches","data","clearSearchList","connector","connect","useState","setValue","useEffect","debouncedSearch","useRef","debounce","searchForStock","current","searchValueChanged","SelectWrapper","select","Option","option","Select","options","label","WrapperWithLink","ButtonWrapper","PrimaryButton","withLink","text","Description","Icon","ErrorDialog","description","buttonText","error","TopSide","aside","BottomSide","Details","DetailsItem","Filters","FilterValue","FilterLabel","Filter","getStockInfo","resultValues","Object","keys","date","open","close","high","low","volume","id","useParams","x","y","mode","marker","layout","width","StocksPage","exact","component","StockSearchPage","SingleStockPage","BigParagraph","p","SmallParagraph","HomePage","bigCube","marginLeft","fontSizes","active","NavBarItem","route","useLocation","pathname","NavBar","Text","LogoWrapper","Logo","logo","HeaderWrapper","header","Header","footer","Footer","section","PageWrapper","MainRouter","minHeight","display","flexDirection","alignItems","StocksRouter","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.8577892f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.eb159786.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.fe93efdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/time.90567480.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.8b35a9fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.fb09deee.svg\";","module.exports = __webpack_public_path__ + \"static/media/big_cube.25e5423e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.815fe2ab.svg\";","import { StockState } from \"./types/StockState\";\nimport {Action} from 'redux'\nimport { SEARCH_STOCK_BY_SYMBOL_SUCCESS, StockAction, SEARCH_STOCK_BY_SYMBOL, SEARCH_STOCK_BY_SYMBOL_FAIL, GET_STOCK_INFO, GET_STOCK_INFO_SUCCESS, GET_STOCK_INFO_FAIL, CLEAR_SEARCH_LIST } from \"./types/ActionTypes\";\nconst initialState: StockState= {\n    searchLoading:false,\n    stockInfoLoading:false,\n    stockInfoError:'',\n    searchError:'',\n    stocks:[],\n    stockInfo: {\n        meta: {\n            info:'',\n            symbol:'',\n            lastRefreshed:'',\n            outputSize:'',\n            timezone:''\n        },\n        values: []\n    }\n}\nexport default (state = initialState, action:StockAction ) => {\n    switch(action.type) {\n        case CLEAR_SEARCH_LIST:\n            return {\n                ...state,\n                stocks:[]\n            }\n        case GET_STOCK_INFO:\n            return {\n                ...state,\n                stockInfoLoading:true,\n                stockInfoError:''\n            }\n        case GET_STOCK_INFO_SUCCESS:\n            return {\n                ...state,\n                stockInfo:action.payload,\n                stockInfoLoading:false\n            }\n        case GET_STOCK_INFO_FAIL:\n            return {\n                ...state,\n                stockInfoLoading:false,\n                stockInfoError:action.payload\n            }\n        case SEARCH_STOCK_BY_SYMBOL:\n            return {\n                ...state,\n                searchLoading:true,\n                searchError:''\n            }\n        case SEARCH_STOCK_BY_SYMBOL_SUCCESS:\n            return {\n                ...state,\n                stocks:action.payload,\n                searchLoading:false\n            }\n        case SEARCH_STOCK_BY_SYMBOL_FAIL:\n            return {\n                ...state,\n                searchError:action.payload,\n                searchLoading:false\n            }\n        default: \n        return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport StocksReducer from '../modules/stocks/StocksReducer'\n\nexport const reducers = combineReducers({\n  stocks: StocksReducer\n})\n\nexport const store = createStore(reducers, applyMiddleware(thunk))\n","import { SearchStock } from \"./SearchStock\"\n\nexport const GET_STOCK_INFO = 'GET_STOCK_INFO'\nexport const GET_STOCK_INFO_SUCCESS = 'GET_STOCK_INFO_SUCCESS'\nexport const GET_STOCK_INFO_FAIL = 'GET_STOCK_INFO_FAIL'\nexport const SEARCH_STOCK_BY_SYMBOL = 'SEARCH_STOCK_BY_SYMBOL'\nexport const SEARCH_STOCK_BY_SYMBOL_SUCCESS = 'SEARCH_STOCK_BY_SYMBOL_SUCCESS'\nexport const SEARCH_STOCK_BY_SYMBOL_FAIL = 'SEARCH_STOCK_BY_SYMBOL_FAIL'\nexport const CLEAR_SEARCH_LIST = 'CLEAR_SEARCH_LIST'\ninterface GetStockAction {\n    type: typeof GET_STOCK_INFO\n}\ninterface GetStockActionSuccess {\n    type: typeof GET_STOCK_INFO_SUCCESS,\n    payload: SearchStock\n}\n\ninterface GetStockActionFail {\n    type: typeof GET_STOCK_INFO_FAIL,\n    payload: string\n}\ninterface SearchStockAction {\n    type: typeof SEARCH_STOCK_BY_SYMBOL\n}\ninterface SearchStockActionSuccess {\n    type: typeof SEARCH_STOCK_BY_SYMBOL_SUCCESS,\n    payload: SearchStock\n}\n\ninterface SearchStockActionFail {\n    type: typeof SEARCH_STOCK_BY_SYMBOL_FAIL,\n    payload: string\n}\ninterface ClearSearchAction {\n    type: typeof CLEAR_SEARCH_LIST\n}\nexport type StockAction = GetStockAction | GetStockActionFail | GetStockActionSuccess\n| SearchStockAction | SearchStockActionFail | SearchStockActionSuccess | ClearSearchAction","export default {\n  primary: '#2A5F7B',\n  primaryDarker: '#20475C',\n  primaryLight: '#E9F2F7',\n  secondary: '#2A5F7B'\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport search from '../assets/icons/search.svg'\nimport clear from '../assets/icons/clear.svg'\nimport colors from '../constants/colors'\nconst InputWrapper = styled.div`\n    position:relative;\n    width:100%;\n`\nconst Input = styled.input`\n    border-radius:40px;\n    padding:0px 48px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    background-color:${colors.primary};\n    outline:none;\n    border:none;\n    height:70px;\n    width:100%;\n    color:white;\n    font-size:30px;\n    &::placeholder {\n        color:rgba(255,255,255,0.6);\n    }\n`\nconst SearchIcon = styled.img`\n    width:40px;\n    height:40px;\n    position:absolute;\n    right:48px;\n    bottom:calc(50% - 20px);\n    ${({withClear}) => withClear && 'cursor:pointer;'}\n`\ninterface Props {\n    value: string;\n    onChange: ((value: string) => void);\n    onClear?: (() => void);\n    withClear?: boolean;\n    placeholder:string;\n}\nconst SearchBar: React.FunctionComponent<Props> = (props) => {\n    const { onChange, value, placeholder, onClear,withClear } = props\n    const clearInput = () => {\n        if(withClear && onClear) {\n            onClear()\n            onChange('')\n        }\n    }\n    return (\n        <InputWrapper>\n            <Input onChange={(e) => onChange(e.target.value)} value={value} placeholder={placeholder}/>\n            <SearchIcon src={value !== '' && withClear? clear: search} onClick={clearInput} withClear={withClear}/>\n        </InputWrapper>\n    )\n}\nexport default SearchBar","export default {\n  primary: 'Montserrat'\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport colors from '../constants/colors'\nimport fonts from '../constants/fonts'\nconst Wrapper = styled.div`\n    padding:24px 0px;\n    border-radius:5px;\n    flex:1;\n  \n`\n\nconst Title = styled.div`\n  font-family:${fonts.primary};\n  margin-bottom:24px;\n  margin-left:48px;\n  font-weight:bold;\n  color:rgba(0,0,0,0.6);\n`\n\nconst LightBox = ({ children, title }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  )\n}\nexport default LightBox\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Link} from 'react-router-dom'\nimport { SearchStock } from './types/SearchStock'\nimport fonts from '../../constants/fonts'\nimport colors from '../../constants/colors'\ninterface Props {\n    item: SearchStock;\n    path: string\n}\n\nconst Wrapper = styled(Link)`\n    background-color:${colors.primaryLight};\n    border-radius:25px;\n    text-decoration:none;\n    color:black;\n    padding:24px 48px;\n    display:flex;\n    justify-content:space-between;\n    margin-bottom:12px;\n    font-family:${fonts.primary};\n    cursor:pointer;\n\n`\nconst LeftSide = styled.div`\n    display:flex;\n    flex-direction:column;\n    justify-content:space-between;\n\n`\nconst Symbol = styled.div`\n    font-size:30px;\n    font-weight:bold;\n`\nconst Name = styled.div`\n    font-size:18px;\n`\nconst RightSide = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\nconst SingleSearchResult: React.FunctionComponent<Props> = (props) =>  {\n    const {item, path} = props\n    return (\n        <Wrapper to={path}>\n            <LeftSide>\n            <Symbol>\n                {item.symbol}\n            </Symbol>\n            <Name>\n                {item.name}\n            </Name>\n            </LeftSide>\n            <RightSide>\n            <div>\n                {item.location}\n            </div>\n            <div style={{height:12}} />\n            <div>\n                {item.currency}\n            </div>\n            </RightSide>\n           \n           \n        </Wrapper>\n    )\n}\nexport default SingleSearchResult","import React from 'react'\nimport styled from 'styled-components'\nimport colors from '../constants/colors'\nconst Wrapper = styled.div`\n  width:100%;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  ${({color, size}) => `\n  .lds-ring {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-ring div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: ${size}px;\n    height: ${size}px;\n    margin: ${size/8}px;\n    border: ${size/8}px solid ${color};\n    border-radius: 50%;\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: ${color} transparent transparent transparent;\n  }\n  .lds-ring div:nth-child(1) {\n    animation-delay: -0.45s;\n  }\n  .lds-ring div:nth-child(2) {\n    animation-delay: -0.3s;\n  }\n  .lds-ring div:nth-child(3) {\n    animation-delay: -0.15s;\n  }\n  @keyframes lds-ring {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  `}\n`\ninterface Props {\n  color?:string;\n  size?:number;\n}\nexport default function Loader<Props> (props) {\n  return (\n    <Wrapper color={props.color || colors.primary} size={props.size || 60}>\n      <div className='lds-ring'><div /><div /><div /><div /></div>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport LightBox from '../../components/LightBox'\nimport SingleSearchResult from './SingleSearchResult'\nimport styled from 'styled-components'\nimport { SearchStock } from './types/SearchStock'\nimport { STOCKS_PAGE_ROUTE } from '../../router/routes'\nimport Loader from '../../components/Loader'\nimport fonts from '../../constants/fonts'\ninterface Props {\n  results: SearchStock[];\n  loading:boolean;\n}\nconst NoResults = styled.div`\n  text-align:center;\n  font-family:${fonts.primary};\n  font-size:30px;\n  margin-top:100px;\n`\nconst StockSearchResults: React.FunctionComponent<Props> = ({ results, loading }) => {\n  return (\n    <LightBox title={results.length === 0 ? '' : 'Markets'}>\n      {loading && <Loader />}\n      {!loading && results.map((item, index) => (\n        <SingleSearchResult\n          path={`${STOCKS_PAGE_ROUTE}/${item.symbol}`}\n          key={index}\n          item={item}\n        />\n      ))}\n      {results.length === 0 && !loading &&\n      <NoResults>\n        Type any symbol to search a stock\n      </NoResults>\n      }\n    </LightBox>\n  )\n}\n\nexport default StockSearchResults","export const HOME_ROUTE = '/'\nexport const STOCKS_PAGE_ROUTE = '/stocks'\n","import { ALPHA_VENTAGE_API_KEY } from './keys'\n\nexport const ALPHA_VENTAGE_API_URL = `https://www.alphavantage.co/query?apikey=${ALPHA_VENTAGE_API_KEY}`\n","export const ALPHA_VENTAGE_API_KEY = '8XAOPXOJHBM4AQUL'\n","import React, { useState, useRef,useEffect } from 'react'\nimport {connect} from 'react-redux'\nimport debounce from 'lodash.debounce'\nimport SearchBar from '../../../components/SearchBar'\nimport StockSearchResults from '../StockSearchResults'\nimport { RootState } from '../../../store/types'\nimport {searchStocksBySymbol, clearSearchList} from '../StocksActions'\n\nfunction StockSearchPage (props) {\n  const [value, setValue] = useState('')\n  useEffect(() => {\n    return () => {\n      props.clearSearchList()\n    };\n  }, [])\n  const searchForStock = (value) => {\n    props.searchStocksBySymbol(value)\n  }\n  const debouncedSearch = useRef(\n    debounce(value => searchForStock(value), 300)\n  ).current\n  const searchValueChanged = (value:string) => {\n    setValue(value)\n    if(value === '') {\n      props.clearSearchList()\n    }  else {\n\n      debouncedSearch(value)\n    }\n  }\n  return (\n    <>\n      <SearchBar\n        placeholder='Enter symbol'\n        withClear\n        onClear={()=> props.clearSearchList()}\n        value={value} onChange={(value:string) => searchValueChanged(value)}\n      />\n      <div style={{ height: 24 }} />\n      <StockSearchResults results={props.stocks}  loading={props.searchLoading}  />\n    </>\n  )\n}\nconst mapState = (state: RootState) => ({\n  stocks: state.stocks.stocks,\n  searchLoading: state.stocks.searchLoading,\n})\n\nconst mapDispatch = {\n  searchStocksBySymbol,\n  clearSearchList\n}\n\nconst connector = connect(mapState, mapDispatch)\nexport default connector(StockSearchPage)","import axios from 'axios'\nimport { ALPHA_VENTAGE_API_URL } from '../../api/apiRoutes'\nimport {AnyAction} from 'redux'\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk'\nimport { AppThunk } from '../../store/types'\nimport {\n  SEARCH_STOCK_BY_SYMBOL,\n  SEARCH_STOCK_BY_SYMBOL_FAIL,\n  SEARCH_STOCK_BY_SYMBOL_SUCCESS,\n  GET_STOCK_INFO,\n  GET_STOCK_INFO_FAIL,\n  GET_STOCK_INFO_SUCCESS,\n  CLEAR_SEARCH_LIST\n} from './types/ActionTypes'\nexport const clearSearchList = (): AppThunk => async (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\n  dispatch({\n    type: CLEAR_SEARCH_LIST\n  })\n}\nexport const getStockInfo = ( type: string, symbol:string): AppThunk => async (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\n  dispatch({\n    type: GET_STOCK_INFO\n  })\n  try {\n    const result = await axios({\n      method: 'get',\n      url: `${ALPHA_VENTAGE_API_URL}&function=${type}&symbol=${symbol}`\n    })\n    if(result.data['Error Message']) {\n      dispatch({\n        type: GET_STOCK_INFO_FAIL,\n        payload: result.data['Error Message']\n      })\n      return\n    }\n    if(result.data['Note']) {\n      dispatch({\n        type: GET_STOCK_INFO_FAIL,\n        payload: result.data['Note']\n      })\n      return\n    }\n      const resultValues = result.data['Time Series (Daily)']\n      dispatch({\n        type: GET_STOCK_INFO_SUCCESS,\n        payload: {\n          meta: {\n            info:result.data['Meta Data']['1. Information'],\n            symbol:result.data['Meta Data']['2. Symbol'],\n            lastRefreshed:result.data['Meta Data']['3. Last Refreshed'],\n            timezone:result.data['Meta Data']['5. Time Zone']\n          },\n          values: Object.keys(resultValues).map(key => ({\n            date:key,\n            open: resultValues[key]['1. open'],\n            close: resultValues[key]['4. close'],\n            high: resultValues[key]['2. high'],\n            low: resultValues[key]['3. low'],\n            volume: resultValues[key]['5. volume'],\n          }))\n        }\n      })\n  } catch (e) {\n    dispatch({\n      type: GET_STOCK_INFO_FAIL,\n      payload:'Something went wrong'\n    })\n  }\n}\n\n\nexport const searchStocksBySymbol = ( keywords:string): AppThunk => async (dispatch: ThunkDispatch<{}, {}, AnyAction>) => {\n  dispatch({\n    type: SEARCH_STOCK_BY_SYMBOL\n  })\n  try {\n   \n    const result = await axios({\n      method: 'get',\n      url: `${ALPHA_VENTAGE_API_URL}&function=SYMBOL_SEARCH&keywords=${keywords}`\n    })\n    const {bestMatches} = result.data\n    if(!bestMatches) {\n      dispatch({\n        type: SEARCH_STOCK_BY_SYMBOL_FAIL,\n        payload: 'No match found'\n      })\n    }\n    dispatch({\n      type: SEARCH_STOCK_BY_SYMBOL_SUCCESS,\n      payload: bestMatches.map(item => ({\n        name: item['2. name'],\n        location: item['4. region'],\n        timezone: item['7. timezone'],\n        currency: item['8. currency'],\n        symbol: item['1. symbol'],\n      }))\n    })\n  } catch (e) {\n    dispatch({\n      type: SEARCH_STOCK_BY_SYMBOL_FAIL,\n      payload: 'Something went wrong'\n    })\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport fonts from '../constants/fonts'\nconst SelectWrapper = styled.select`\n    min-width:150px;\n    height:40px;\n    padding:24px;\n    border:none;\n    font-size:14px;\n    box-shadow: 1px 1px 6px rgba(0,0,0,0.15);\n    font-family:${fonts.primary};\n`\nconst Option = styled.option`\n    height:40px;\n`\nexport default function Select (props) {\n  const { options } = props\n  return (\n    <SelectWrapper>\n      {options.map((item, index) => (\n        <Option key={index} value={item.value}>\n          {item.label}\n        </Option>))}\n    </SelectWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Link} from 'react-router-dom'\nimport colors from '../../constants/colors'\nimport fonts from '../../constants/fonts'\ninterface Props {\n    text:string;\n    withLink?: boolean;\n    to?:string;\n    onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void\n}\n\nconst WrapperWithLink = styled(Link)`\n    text-decoration:none;\n`\nconst ButtonWrapper = styled.div`\n    border-radius:5px;\n    padding:15px 100px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    color:white;\n    background-color:${colors.primary};\n    font-family:${fonts.primary};\n    font-size:20px;\n    cursor:pointer;\n    &:hover {\n        background-color:${colors.primaryDarker};\n    }\n`\nconst PrimaryButton: React.FunctionComponent<Props> = (props) =>  {\n    if(props.withLink) {\n        return <WrapperWithLink to={props.to}>\n            <ButtonWrapper>{props.text}</ButtonWrapper>\n        </WrapperWithLink>\n    } else {\n        return (\n            <ButtonWrapper onClick={props.onClick}>\n                {props.text}\n            </ButtonWrapper>\n        )\n    }\n   \n}\nexport default PrimaryButton","import React from 'react'\nimport styled from 'styled-components'\nimport error from '../assets/icons/error.svg'\nimport PrimaryButton from './buttons/PrimaryButton'\nimport fonts from '../constants/fonts'\ninterface Props {\n    title: string;\n    description: string;\n    buttonText: string;\n    onClick: (() => void);\n}\n\nconst Wrapper = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\nconst Description = styled.div`\n    padding:40px 60px;\n    text-align:center;\n    font-family:${fonts.primary};\n    font-size:16px;\n    line-height:30px;\n`\nconst Icon = styled.img`\n    width:200px;\n    height:200px;\n`\nconst Button = styled.div``\nexport default function ErrorDialog(props) {\n    const { title, description, buttonText, onClick } = props\n    return (\n        <Wrapper>\n            <Icon src={error} />\n            <Description>{description}</Description>\n            <PrimaryButton onClick={onClick} text={buttonText} />\n        </Wrapper>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useParams } from 'react-router-dom'\nimport Plot from 'react-plotly.js'\nimport { connect } from 'react-redux'\nimport { RootState } from '../../../store/types'\nimport { getStockInfo } from '../StocksActions'\nimport colors from '../../../constants/colors'\nimport fonts from '../../../constants/fonts'\nimport timezone from '../../../assets/icons/time.svg'\nimport location from '../../../assets/icons/location.svg'\nimport money from '../../../assets/icons/money.svg'\nimport Select from '../../../components/Select'\nimport Loader from '../../../components/Loader'\nimport PrimaryButton from '../../../components/buttons/PrimaryButton'\nimport ErrorDialog from '../../../components/ErrorDialog'\nconst Wrapper = styled.div`\n    display:flex;\n    flex-direction:column;\n    flex:1;\n    font-family:${fonts.primary};\n    color:white;\n`\nconst TopSide = styled.aside`\n  display:flex;\n  padding:24px 48px;\n  align-items:center;\n  justify-content:space-between;\n  background-color:${colors.primary};\n  border-radius:25px;\n`\nconst BottomSide = styled.div`\n  flex:1;\n  display:flex;\n  padding:24px;\n  flex-direction:column;\n  margin-top:12px;\n  background-color:${colors.primaryLight};\n  border-radius:5px;\n  align-items:center;\n`\nconst Symbol = styled.div`\n  font-size:30px;\n  font-weight:bold;\n  letter-spacing:2px;\n`\nconst Details = styled.div`\n`\nconst DetailsItem = styled.div`\n  display:flex;\n  font-size:18px;\n  align-items:center;\n`\nconst Icon = styled.img`\n  margin-right:10px;\n  width:25px;\n  height:25px;\n`\nconst Filters = styled.div`\n  width:100%;\n  display:flex;\n  margin-bottom:24px;\n`\nconst FilterValue = styled.div`\n`\nconst FilterLabel = styled.label`\n  color:rgba(0,0,0,0.8);\n  margin-bottom:12px;\n\n`\nconst Filter = styled.div`\n  display:flex;\n  flex-direction:column;\n  margin-right:12px;\n`\nfunction SingleStockPage(props) {\n  const [type, setType] = useState('TIME_SERIES_DAILY')\n  const { id } = useParams()\n  useEffect(() => {\n    props.getStockInfo(type, id)\n  }, [type])\n  const { stockInfo, stockInfoError, stockInfoLoading } = props\n  if (stockInfoLoading) {\n    return <Loader />\n  }\n  if (stockInfoError) {\n    return <ErrorDialog description={stockInfoError} onClick={() => {\n      props.getStockInfo(type, id)\n    }} buttonText='Retry' />\n  }\n  return (\n    <Wrapper>\n      <TopSide>\n        <Symbol>{stockInfo.meta.symbol}</Symbol>\n        <Details>\n          <DetailsItem>\n            <Icon src={location} />\n            <div>{stockInfo.meta.timezone}</div>\n          </DetailsItem>\n          <div style={{ height: 5 }} />\n          <DetailsItem>\n            <Icon src={timezone} />\n            <div>{stockInfo.meta.lastRefreshed}</div>\n          </DetailsItem>\n\n        </Details>\n\n      </TopSide>\n      <BottomSide>\n        <Filters>\n          <Filter>\n            <FilterLabel>Time frame</FilterLabel>\n            <FilterValue>\n              <Select options={[{\n                label: 'dada',\n                value: 'dada'\n              }\n              ]} />\n            </FilterValue>\n          </Filter>\n          <Filter>\n            <FilterLabel>Graph type</FilterLabel>\n            <FilterValue>\n              <Select options={[\n                {\n                  label: 'Plotify',\n                  value: 'plotify'\n                },\n                {\n                  label: 'Custom',\n                  value: 'custom'\n                }\n              ]} />\n            </FilterValue>\n          </Filter>\n\n\n        </Filters>\n        <Plot\n          data={[\n            {\n              x: stockInfo.values.map(item => item.date),\n              y: stockInfo.values.map(item => item.open),\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: { color: 'red' },\n            },\n          ]}\n          layout={{ width: 854, height: 440 }}\n        />\n      </BottomSide>\n    </Wrapper>\n  )\n}\nconst mapState = (state: RootState) => ({\n  stockInfo: state.stocks.stockInfo,\n  stockInfoError: state.stocks.stockInfoError,\n  stockInfoLoading: state.stocks.stockInfoLoading\n})\n\nconst mapDispatch = {\n  getStockInfo\n}\n\nconst connector = connect(mapState, mapDispatch)\nexport default connector(SingleStockPage)","import React from 'react'\nimport { Route, useLocation } from 'react-router-dom'\nimport StockSearchPage from './pages/StockSearchPage'\nimport SingleStockPage from './pages/SingleStockPage'\nimport { STOCKS_PAGE_ROUTE } from '../../router/routes'\n\nexport default function StocksPage () {\n  return (\n    <>\n      <Route exact path={STOCKS_PAGE_ROUTE} component={StockSearchPage} />\n      <Route exact path={`${STOCKS_PAGE_ROUTE}/:id`} component={SingleStockPage} />\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport bigCube from '../../assets/images/big_cube.svg'\nimport fonts from '../../constants/fonts'\nimport { STOCKS_PAGE_ROUTE } from '../../router/routes'\nimport PrimaryButton from '../../components/buttons/PrimaryButton'\nconst Wrapper = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\nconst BigParagraph = styled.p`\n    font-size:35px;\n    font-family:${fonts.primary};\n    font-weight:bold;\n    margin:0;\n    margin-top:60px;\n    text-align:center;\n`\nconst SmallParagraph = styled.p`\n    font-size:24px;\n    font-family:${fonts.primary};\n    margin:0;\n    margin-top:20px;\n    text-align:center;\n    margin-bottom:40px;\n    transition: background-color .3s ease;\n   \n`\nexport default function HomePage () {\n  return (\n    <Wrapper>\n      <img src={bigCube} style={{ width: 300, height: 300, marginLeft: 120 }} />\n      <BigParagraph>\n      All essential data gathered in one place\n      </BigParagraph>\n      <SmallParagraph>\n      Look for the sock you want.\n      </SmallParagraph>\n      <PrimaryButton text='Find stocks' withLink to={STOCKS_PAGE_ROUTE} />\n    </Wrapper>\n  )\n}\n","export default {\n  large: 20\n}\n","import React from 'react'\nimport {Link, useLocation} from 'react-router-dom'\nimport styled from 'styled-components'\nimport colors from '../constants/colors'\nimport fonts from '../constants/fonts'\nimport fontSizes from '../constants/fontSizes'\nconst Wrapper = styled(Link)`\n    color: rgba(0,0,0,0.6);\n    font-family:${fonts.primary};\n    text-decoration:none;\n    font-size: ${fontSizes.large}px;\n    margin-left:50px;\n    ${({active}) => active && `\n        color:rgba(0,0,0,1);\n    `}\n`\ninterface Props {\n    route: {\n        name: string,\n        to:string\n    };\n}\nexport const NavBarItem : React.FunctionComponent<Props> = ({route}) =>  {\n    let location = useLocation();\n    return (\n        <Wrapper to={route.to} active={location.pathname === route.to}>\n            {route.name}\n        </Wrapper>\n    )\n}\n","import React from 'react'\nimport { NavBarItem } from './NavBarItem'\nimport { HOME_ROUTE, STOCKS_PAGE_ROUTE } from '../router/routes'\n\nconst NavBar = () => {\n  return (\n    <div>\n      <NavBarItem route={{ to: HOME_ROUTE, name: 'home' }} />\n      <NavBarItem route={{ to: STOCKS_PAGE_ROUTE, name: 'stocks' }} />\n    </div>\n  )\n}\nexport default NavBar\n","import React from 'react'\nimport logo from '../assets/images/logo.svg'\nimport styled from 'styled-components'\nimport fonts from '../constants/fonts'\nimport fontSizes from '../constants/fontSizes'\nconst Text = styled.div`\n    font-family:${fonts.primary};\n    font-size:${fontSizes.large}px;\n    font-weight:bold;\n`\n\nconst Wrapper = styled.div`\n    display:flex;\n    align-items:center;\n`\nconst LogoWrapper = styled.img`\n    height:60px;\n    width:30px;\n    margin-left:5px;\n`\nexport default function Logo () {\n  return (\n    <Wrapper>\n      <Text>\n        stock finder\n      </Text>\n      <LogoWrapper src={logo} />\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport NavBar from './NavBar'\nimport Logo from './Logo'\nconst HeaderWrapper = styled.header`\n    display:flex;\n    width:100%;\n    justify-content:space-between;\n    align-items:center;\n    padding: 20px 0;\n    max-width:900px\n`\nexport default function Header () {\n  return (\n    <HeaderWrapper>\n      <Logo />\n      <NavBar />\n    </HeaderWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nconst Wrapper = styled.footer`\n  padding: 20px 0;\n  max-width:900px\n`\nexport default function Footer () {\n  return (\n    <Wrapper />\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nconst Wrapper = styled.section`\n    padding: 20px 0;\n    flex:1;\n    display:flex;\n    flex-direction:column;\n    max-width:900px;\n    width:100%;\n`\nexport default function PageWrapper ({ children }) {\n  return (\n    <Wrapper>\n      {children}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { STOCKS_PAGE_ROUTE, HOME_ROUTE } from './routes'\nimport StocksRouter from '../modules/stocks/StocksRouter'\nimport HomePage from '../modules/home/HomePage'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport PageWrapper from '../components/PageWrapper'\n\nexport default function MainRouter () {\n  return (\n    <div style={{ minHeight: '100vh', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n\n      <Router>\n        <Header />\n        <PageWrapper>\n          <Switch>\n            <Route path={STOCKS_PAGE_ROUTE} component={StocksRouter} />\n            <Route path={HOME_ROUTE} component={HomePage} />\n          </Switch>\n        </PageWrapper>\n        <Footer />\n\n      </Router>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport './App.css'\nimport './assets/fonts/fonts.css'\nimport { store } from './store/store'\nimport MainRouter from './router/MainRouter'\nfunction App () {\n  return (\n    <Provider store={store}>\n      <MainRouter />\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}